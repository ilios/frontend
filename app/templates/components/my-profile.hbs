<h1 class="name">
  {{user.fullName}}
</h1>

{{#if (await user.isStudent)}}
  <span class="is-student"><h2>{{t 'general.student'}}</h2></span>
{{/if}}

<div class="details">
  <section class="permissions">
    <h4 class="header">{{t 'general.userRoles'}}</h4>

    <div class="permissions-body">
      {{#if (is-fulfilled roles)}}
        <div class="permissions-row">
          <span>
            {{fa-icon (if (contains 'Course Director' (await roles)) 'check' 'ban') class=(if (contains 'Course Director' (await roles)) 'yes' 'no')}}
            {{t 'general.courseDirector'}}
          </span>
        </div>
        <div class="permissions-row">
          <span>
            {{fa-icon (if (contains 'Faculty' (await roles)) 'check' 'ban') class=(if (contains 'Faculty' (await roles)) 'yes' 'no')}}
            {{t 'general.instructor'}}
          </span>
        </div>
        <div class="permissions-row">
          <span>
            {{fa-icon (if (contains 'Developer' (await roles)) 'check' 'ban') class=(if (contains 'Developer' (await roles)) 'yes' 'no')}}
            {{t 'general.developer'}}
          </span>
        </div>
        <div class="permissions-row">
          <span>
            {{fa-icon (if (contains 'Former Student' (await roles)) 'check' 'ban') class=(if (contains 'Former Student' (await roles)) 'yes' 'no')}}
            {{t 'general.formerStudent'}}
          </span>
        </div>
        <hr>

        <div class="permissions-row">
          <span>
            {{fa-icon (if user.syncIgnore 'check' 'ban') class=(if user.syncIgnore 'yes' 'no')}}
            {{t 'general.excludeFromSync'}}
          </span>
        </div>
      {{/if}}
    </div>
  </section>

  <section class="info">
    <div class="row">
      <span class='title'>{{t 'general.primarySchool'}}:</span>
      <span class='content'>
        {{#if (await user.school)}}
          {{get (await user.school) 'title'}}
        {{else}}
          {{t 'general.unassigned'}}
        {{/if}}
      </span>
    </div>
    <div class="row">
      <span class='title'>{{t 'general.primaryCohort'}}:</span>
      <span class='content'>
        {{#if (await user.primaryCohort)}}
          {{get (await user.primaryCohort) 'title'}}
        {{else}}
          {{t 'general.unassigned'}}
        {{/if}}
      </span>
    </div>
    <div class="row">
      <span class='title'>{{t 'general.secondaryCohorts'}}:</span>
      <span class='content'>
        {{#if (get (await user.secondaryCohorts) 'length')}}
          <ul class="secondary-cohorts details-list">
            {{#each (sort-by 'title' (await user.secondaryCohorts)) as |cohort|}}
              <li>
                <span class="title">{{cohort.title}} </span>
                <span class="content">{{cohort.programYear.program.title}}</span>
              </li>
            {{/each}}
          </ul>
        {{else}}
          {{t 'general.unassigned'}}
        {{/if}}
      </span>
    </div>
    <div class="row">
      <span class='title'>{{t 'general.learnerGroups'}}:</span>
      <span class='content'>
        {{#if (await user.learnerGroups)}}
          <ul class="secondary-cohorts details-list">
            {{#each (sort-by 'title' (await user.learnerGroups)) as |group|}}
              <li>{{group.title}} ({{group.cohort.title}} {{group.cohort.programYear.program.title}})</li>
            {{/each}}
          </ul>
        {{else}}
          {{t 'general.unassigned'}}
        {{/if}}
      </span>
    </div>
  </section>
</div>

<section class='token-maintenance'>
  <h3>{{t 'general.manageAPITokens'}}</h3>
  <p>{{t 'general.tokenInfo' apiDocsUrl=apiDocsUrl}}</p>
  {{#unless (or showInvalidateTokens showCreateNewToken)}}
    <button class='new-token done text' onclick={{action toggleShowCreateNewToken}}>{{t 'general.createNew'}}</button>
    <button class='invalidate-tokens cancel text' onclick={{action toggleShowInvalidateTokens}}>{{t 'general.invalidateTokens'}}</button>
  {{else}}
    {{#if showCreateNewToken}}
      {{#if generatedJwt}}
        <div class='new-token-result'>
          <h3>{{t 'general.newToken'}}:</h3>
          <input readonly value={{generatedJwt}} />
          {{#copy-button success='tokenCopied' clipboardText=generatedJwt}}
            {{fa-icon 'copy'}}
          {{/copy-button}}
          <button class='bigcancel' {{action (pipe toggleShowCreateNewToken (action 'reset'))}}>{{fa-icon 'times'}}</button>
        </div>
      {{else}}
        <div class='new-token-form'>
          <label>{{t 'general.validUntil'}}</label>
          {{pikaday-input
            size=10
            value=expiresAt
            maxDate=maxDate
            minDate=minDate
            format='YYYY-MM-DD'
            onSelection=(action 'selectExpiresAtDate')
          }}
          <button class='bigadd' {{action (perform createNewToken)}}>
            {{#if createNewToken.isRunning}}
              {{fa-icon 'spinner' spin=true}}
            {{else}}
              {{fa-icon 'check'}}
            {{/if}}
          </button>
          <button class='bigcancel' {{action (pipe toggleShowCreateNewToken (action 'reset'))}}>{{fa-icon 'times'}}</button>
        </div>
      {{/if}}
    {{/if}}
    {{#if showInvalidateTokens}}
      <div class='invalidate-tokens-form'>
        <h3>{{t 'general.invalidateTokens'}}</h3>
        <p>{{t 'general.invalidateTokensConfirmation'}}</p>
        <button class='done text' {{action (perform invalidateTokens)}}>
          {{#if invalidateTokens.isRunning}}
            {{fa-icon 'spinner' spin=true}}
          {{else}}
            {{t 'general.yes'}}
          {{/if}}
        </button>
        <button class='cancel text' {{action toggleShowInvalidateTokens}}>{{t 'general.cancel'}}</button>
      </div>
    {{/if}}
  {{/unless}}
</section>
