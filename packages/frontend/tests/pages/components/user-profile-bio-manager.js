import {
  clickable,
  create,
  isVisible,
  fillable,
  hasClass,
  property,
  text,
  triggerable,
  value,
} from 'ember-cli-page-object';

const definition = {
  scope: '[data-test-user-profile-bio-manager]',
  save: clickable('[data-test-save]'),
  cancel: clickable('[data-test-cancel]'),
  syncWithDirectory: {
    scope: '[data-test-directory-sync]',
  },
  school: text('[data-test-school]'),
  firstName: {
    scope: '[data-test-firstname]',
    label: text('label'),
    set: fillable('input'),
    value: value('input'),
    hasError: isVisible('.validation-error-message'),
    hasBeenSyncedFromDirectory: hasClass('synced-from-directory'),
    submit: triggerable('keyup', 'input', { eventProperties: { key: 'Enter' } }),
    cancel: triggerable('keyup', 'input', { eventProperties: { key: 'Escape' } }),
  },
  middleName: {
    scope: '[data-test-middlename]',
    label: text('label'),
    set: fillable('input'),
    value: value('input'),
    hasError: isVisible('.validation-error-message'),
    submit: triggerable('keyup', 'input', { eventProperties: { key: 'Enter' } }),
    cancel: triggerable('keyup', 'input', { eventProperties: { key: 'Escape' } }),
  },
  lastName: {
    scope: '[data-test-lastname]',
    label: text('label'),
    set: fillable('input'),
    value: value('input'),
    hasError: isVisible('.validation-error-message'),
    hasBeenSyncedFromDirectory: hasClass('synced-from-directory'),
    submit: triggerable('keyup', 'input', { eventProperties: { key: 'Enter' } }),
    cancel: triggerable('keyup', 'input', { eventProperties: { key: 'Escape' } }),
  },
  campusId: {
    scope: '[data-test-campus-id]',
    set: fillable('input'),
    value: value('input'),
    hasError: isVisible('[data-test-validation-error]'),
    hasBeenSyncedFromDirectory: hasClass('synced-from-directory'),
    submit: triggerable('keyup', 'input', { eventProperties: { key: 'Enter' } }),
    cancel: triggerable('keyup', 'input', { eventProperties: { key: 'Escape' } }),
  },
  directorySyncError: {
    scope: '[data-test-sync-error]',
  },
  otherId: {
    scope: '[data-test-other-id]',
    label: text('label'),
    set: fillable('input'),
    value: value('input'),
    hasError: isVisible('.validation-error-message'),
    submit: triggerable('keyup', 'input', { eventProperties: { key: 'Enter' } }),
    cancel: triggerable('keyup', 'input', { eventProperties: { key: 'Escape' } }),
  },
  email: {
    scope: '[data-test-email]',
    label: text('label'),
    set: fillable('input'),
    value: value('input'),
    hasError: isVisible('.validation-error-message'),
    hasBeenSyncedFromDirectory: hasClass('synced-from-directory'),
    submit: triggerable('keyup', 'input', { eventProperties: { key: 'Enter' } }),
    cancel: triggerable('keyup', 'input', { eventProperties: { key: 'Escape' } }),
  },
  displayName: {
    scope: '[data-test-displayname]',
    label: text('label'),
    set: fillable('input'),
    value: value('input'),
    hasError: isVisible('.validation-error-message'),
    hasBeenSyncedFromDirectory: hasClass('synced-from-directory'),
    submit: triggerable('keyup', 'input', { eventProperties: { key: 'Enter' } }),
    cancel: triggerable('keyup', 'input', { eventProperties: { key: 'Escape' } }),
  },
  pronouns: {
    scope: '[data-test-pronouns]',
    label: text('label'),
    set: fillable('input'),
    value: value('input'),
    hasError: isVisible('.validation-error-message'),
    hasBeenSyncedFromDirectory: hasClass('synced-from-directory'),
    submit: triggerable('keyup', 'input', { eventProperties: { key: 'Enter' } }),
    cancel: triggerable('keyup', 'input', { eventProperties: { key: 'Escape' } }),
  },
  preferredEmail: {
    scope: '[data-test-preferred-email]',
    label: text('label'),
    set: fillable('input'),
    value: value('input'),
    hasError: isVisible('.validation-error-message'),
    submit: triggerable('keyup', 'input', { eventProperties: { key: 'Enter' } }),
    cancel: triggerable('keyup', 'input', { eventProperties: { key: 'Escape' } }),
  },
  phone: {
    scope: '[data-test-phone]',
    label: text('label'),
    set: fillable('input'),
    value: value('input'),
    hasError: isVisible('.validation-error-message'),
    hasBeenSyncedFromDirectory: hasClass('synced-from-directory'),
    submit: triggerable('keyup', 'input', { eventProperties: { key: 'Enter' } }),
    cancel: triggerable('keyup', 'input', { eventProperties: { key: 'Escape' } }),
  },
  username: {
    scope: '[data-test-username]',
    label: text('label'),
    set: fillable('input'),
    value: value('input'),
    isDisabled: property('disabled', 'input'),
    hasError: isVisible('.validation-error-message'),
    errors: text('.validation-error-message'),
    hasBeenSyncedFromDirectory: hasClass('synced-from-directory'),
    submit: triggerable('keyup', 'input', { eventProperties: { key: 'Enter' } }),
    cancel: triggerable('keyup', 'input', { eventProperties: { key: 'Escape' } }),
  },
  password: {
    scope: '[data-test-password]',
    label: text('label'),
    set: fillable('input'),
    value: value('input'),
    isDisabled: property('disabled', 'input'),
    hasError: isVisible('.validation-error-message'),
    submit: triggerable('keyup', 'input', { eventProperties: { key: 'Enter' } }),
    cancel: triggerable('keyup', 'input', { eventProperties: { key: 'Escape' } }),
    strength: {
      scope: '[data-test-password-strength-text]',
      hasZeroClass: hasClass('strength-0'),
      hasOneClass: hasClass('strength-1'),
      hasTwoClass: hasClass('strength-2'),
      hasThreeClass: hasClass('strength-3'),
      hasFourClass: hasClass('strength-4'),
    },
    meter: {
      scope: '[data-test-password-strength-meter]',
    },
    close: clickable('[data-test-password-cancel]'),
    edit: clickable('[data-test-change-password]'),
  },
};

export default definition;
export const component = create(definition);
